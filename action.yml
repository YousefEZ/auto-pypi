name: 'AutoBump-Pypi'
description: 'Bump Version, Create Tag, Build and Publish to Twine'
inputs:
  githubtoken:
    description: 'The GITHUB_TOKEN secret'
    required: true
    default: ${{ github.token }}
  twinetoken:
    description: 'The twine API token to use for publishing'
    required: true
    default: ""
  repository:
     description: "resposiory url for twine"
     required: true
     default: "https://upload.pypi.org/"
  regex:
    description: "the leading string before the bump tags"
    required: true
    default: "version: "
runs:
  using: composite
  steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bumpver twine build
        pip install build --upgrade
      shell: bash
    - name: Get version from pull request description
      id: get_version
      uses: actions/github-script@v4
      with:
        github-token: ${{ inputs.githubtoken }}
        script: |
          const pullRequest = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });
          const regex = new RegExp("(?<=${{ inputs.regex }}).*", "g");
          const version = pullRequest.data.body.match(regex)[0];
          core.setOutput("version", version);
    - name: Bump version
      run: |
        git config user.name AlBumperBot
        git config user.email 41898282+AlBumperBot[bot]@users.noreply.github.com
        bumpver update --${{ steps.get_version.outputs.version }} --commit
      shell: bash
    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        branch: main
        force: true
        github_token: ${{ inputs.githubtoken }}
    - name: Build Distribution
      run: python -m build
      shell: bash
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ inputs.twinetoken }}
        repository-url: ${{ inputs.repository }}
