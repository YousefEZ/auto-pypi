name: 'AutoBump-Pypi'
description: 'Bump Version, Create Tag, Build and Publish to Twine'
inputs:
  githubtoken:
    description: 'The GITHUB_TOKEN secret'
    required: true
    default: ${{ github.token }}
  twinetoken:
    description: 'The twine API token to use for publishing'
    required: true
    default: ""
  repository:
     description: "resposiory url for twine"
     required: true
     default: "https://upload.pypi.org/legacy/"
  regex:
    description: "the leading string before the bump tags"
    required: true
    default: "version: "
runs:
  using: composite
  steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bumpver twine build
        pip install build --upgrade
      shell: bash
      working-directory: .
    - name: Get version from pull request description
      id: get_version
      uses: actions/github-script@v4
      with:
        github-token: ${{ inputs.githubtoken }}
        script: |
          const pullRequest = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
          });
          const regex = new RegExp("(?<=${{ inputs.regex }}).*", "g");
          const version = pullRequest.data.body.match(regex)[0];
          core.setOutput("version", version);
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: main
        fetch-depth: 0
    - name: Bump version
      run: |
        echo "GITHUB_ACTOR=${{ github.actor }}" >> $GITHUB_ENV
        git config user.name AutoPyPi
        git config user.email "auto-pypi[bot]@users.noreply.github.com"
        git checkout -b bumpversion-autopypi
        if git ls-remote --exit-code --heads origin bumpversion-autopypi | grep -q bumpversion-autopypi; then
          echo "Branch exists"
          git pull origin bumpversion-autopypi
        else
          echo "Branch does not exist"
        fi
        git push --set-upstream origin bumpversion-autopypi
        git merge --squash main
        bumpver update --${{ steps.get_version.outputs.version }} --commit-message ":arrow_up: bump ${{ steps.get_version.outputs.version }} OLD â†’ NEW" --commit
      shell: bash
    - name: Create pull request
      if: ${{ github.event.pull_request.merged == true }}
      uses: peter-evans/create-pull-request@v7
      with:
        title: ":arrow_up: Version bump"
        commit-message: ":arrow_up: Bump Version ${{ steps.get_version.outputs.version }}"
        branch: bumpversion-autopypi
        base: main
        body: "This pull request bumps the version of the Python package."
      env:
        GITHUB_TOKEN: ${{ inputs.githubtoken }}
    - name: Merge Pull Requests
      run: gh pr merge --merge "bumpversion-autopypi"
      env:
        GH_TOKEN: ${{ inputs.githubtoken }}
      shell: bash
    - name: Build Distribution
      run: python -m build
      shell: bash
    - name: Publish distribution ðŸ“¦ to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ inputs.twinetoken }}
        repository-url: ${{ inputs.repository }}
        packages-dir: dist/
